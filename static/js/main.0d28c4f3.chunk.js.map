{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","App.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","sum","className","s","container","text","FeedbackOptions","options","onLeaveFeedback","map","el","type","button","onClick","name","id","Section","title","children","defaultProps","Notification","message","App","useState","setGood","setNeutral","setBad","percent","toFixed","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,UAAY,8BAA8B,KAAO,2B,kBCAnED,EAAOC,QAAU,CAAC,UAAY,mCAAmC,OAAS,kC,gBCA1ED,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,gBCAjED,EAAOC,QAAU,CAAC,UAAY,gCAAgC,QAAU,gC,iJCAxED,EAAOC,QAAU,CAAC,IAAM,mB,qIC0BTC,EAxBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACzCC,EAAMF,EAAMH,EAAMC,EAASC,GAEjC,OACE,sBAAKI,UAAWC,IAAEC,UAAlB,UACE,oBAAGF,UAAWC,IAAEE,KAAhB,oBAA8BT,KAC9B,oBAAGM,UAAWC,IAAEE,KAAhB,uBAAiCR,KACjC,oBAAGK,UAAWC,IAAEE,KAAhB,mBAA6BP,KAE7B,oBAAGI,UAAWC,IAAEE,KAAhB,qBAA+BJ,KAC/B,oBAAGC,UAAWC,IAAEE,KAAhB,gCACsBL,EAAmBC,EAAKL,U,gBCarCU,EAxBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKN,UAAWC,IAAEC,UAAlB,SACGG,EAAQE,KAAI,SAACC,GAAD,OACX,wBAEEC,KAAK,SACLT,UAAWC,IAAES,OACbC,QAAS,kBAAML,EAAgBE,IAJjC,SAMGA,EAAGI,MALCJ,EAAGK,U,gBCLZC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAAShB,UAAWC,IAAEC,UAAtB,UACE,oBAAIF,UAAWC,IAAEc,MAAjB,SAAyBA,IACxBC,MASPF,EAAQG,aAAe,CACrBF,MAAO,0DAGMD,Q,gBCLAI,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,qBAAKnB,UAAWC,IAAEC,UAAlB,SACE,oBAAIF,UAAWC,IAAEkB,QAAjB,SAA2BA,O,wBCoDlBC,MAjDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAO3B,EAAP,KAAa4B,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAO1B,EAAP,KAAgB4B,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOzB,EAAP,KAAY4B,EAAZ,KAEM3B,EASN,WACE,OAAOH,EAAOC,EAAUC,GATpBE,EAYN,SAAyCD,EAAOH,GAC9C,IAAM+B,GAAY,IAAM/B,EAAQG,GAAO6B,QAAQ,GAC/C,OAAoB,QAAZD,EAAoBA,EAAU,KAAO,KAG/C,OACE,sBAAKzB,UAAWC,IAAEmB,IAAlB,UACE,cAAC,EAAD,CAASL,MAAM,uBAAf,SACE,cAAC,EAAD,CACEV,QAASA,EACTC,gBApBgB,SAAC,GAAc,IAAZM,EAAW,EAAXA,KACZ,SAATA,EAAiBU,GAAQ,SAACK,GAAD,OAAeA,EAAY,KACtC,YAATf,EAAoBW,GAAW,SAACI,GAAD,OAAeA,EAAY,KACjD,QAATf,GAAgBY,GAAO,SAACG,GAAD,OAAeA,EAAY,UAqBxDjC,EAAO,GAAKC,EAAU,GAAKC,EAAM,EAChC,cAAC,EAAD,CAASmB,MAAM,aAAf,SACE,cAAC,EAAD,CACErB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,MAIxB,cAAC,EAAD,CAAcqB,QAAQ,0BC/C9BS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0d28c4f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Statistics_container__1Y75k\",\"text\":\"Statistics_text__4x-o5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__2Hmh4\",\"button\":\"FeedbackOptions_button__1zuYg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__1A3mT\",\"title\":\"Section_title__2izLP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Notification_container__2ZLO2\",\"message\":\"Notification_message__1yxmE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3p5YO\"};","import PropTypes from \"prop-types\";\nimport s from \"./Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  const sum = total(good, neutral, bad);\n\n  return (\n    <div className={s.container}>\n      <p className={s.text}>Good : {good}</p>\n      <p className={s.text}>Neutral : {neutral}</p>\n      <p className={s.text}>Bad : {bad}</p>\n\n      <p className={s.text}>Total : {sum}</p>\n      <p className={s.text}>\n        Positive feedback: {positivePercentage(sum, good)}\n      </p>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.func,\n  positivePercentage: PropTypes.func,\n};\nexport default Statistics;\n","import PropTypes from \"prop-types\";\nimport s from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div className={s.container}>\n      {options.map((el) => (\n        <button\n          key={el.id}\n          type=\"button\"\n          className={s.button}\n          onClick={() => onLeaveFeedback(el)}\n        >\n          {el.name}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n    })\n  ),\n};\nexport default FeedbackOptions;\n","import PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.container}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nSection.defaultProps = {\n  title: \"Заголовок\",\n};\n\nexport default Section;\n","import PropTypes from \"prop-types\";\nimport s from \"./Notification.module.css\";\n\nconst Notification = ({ message }) => {\n  return (\n    <div className={s.container}>\n      <h2 className={s.message}>{message}</h2>\n    </div>\n  );\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { useState } from \"react\";\n\nimport Statistics from \"./components/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Section from \"./components/Section\";\nimport Notification from \"./components/Notification\";\nimport options from \"./components/FeedbackOptions/button.json\";\nimport s from \"./App.module.css\";\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const total = countTotalFeedback;\n  const positivePercentage = countPositiveFeedbackPercentage;\n\n  const onLeaveFeedback = ({ name }) => {\n    if (name === \"Good\") setGood((prevState) => prevState + 1);\n    else if (name === \"Neutral\") setNeutral((prevState) => prevState + 1);\n    else if (name === \"Bad\") setBad((prevState) => prevState + 1);\n  };\n\n  function countTotalFeedback() {\n    return good + neutral + bad;\n  }\n\n  function countPositiveFeedbackPercentage(total, good) {\n    const percent = ((100 * good) / total).toFixed(2);\n    return (percent !== \"NaN\" ? percent : \"0\") + \"%\";\n  }\n\n  return (\n    <div className={s.App}>\n      <Section title=\"Plise leave feedback\">\n        <FeedbackOptions\n          options={options}\n          onLeaveFeedback={onLeaveFeedback}\n        ></FeedbackOptions>\n      </Section>\n\n      {good > 0 || neutral > 0 || bad > 0 ? (\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          ></Statistics>\n        </Section>\n      ) : (\n        <Notification message=\"No feedback given\"></Notification>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}